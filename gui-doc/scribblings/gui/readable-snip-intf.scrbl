#lang scribble/doc
@(require "common.rkt")

@definterface/title[readable-snip<%> ()]{

@;{A @racket[readable-snip<%>] object is treated specially by the port
 generated by @racket[open-input-text-editor]: When a
 @racket[readable-snip<%>] object is encountered for the input stream,
 its @method[readable-snip<%> read-special] method is called to
 generate the read result for the snip, which is returned from the
 port as a ``special'' value in the sense of
 @racket[read-char-or-special].}
  @racket[readable-snip<%>]对象由@racket[open-input-text-editor]生成的端口进行特殊处理：当输入流遇到@racket[readable-snip<%>]对象时，调用其@method[readable-snip<%> read-special]方法来生成剪切的读取结果，该结果从端口返回为@racket[read-char-or-special]意义上的“特殊”值。

@;{Since @racket[read] and @racket[read-syntax] build on
 @racket[read-char-or-special], a snip can implement
 @racket[readable-snip<%>] so that it produces a whole S-expression or
 some other kind of value when @racket[read] is used on a stream
 containing the snip.}
  由于@racket[read]和@racket[read-syntax]基于@racket[read-char-or-special]可以实现@racket[readable-snip<%>]以便在包含剪切的流上使用@racket[read]时生成完整的S表达式或其他类型的值。

@defmethod[(read-special [source any/c]
                         [line (or/c exact-nonnegative-integer? #f)]
                         [column (or/c exact-nonnegative-integer? #f)]
                         [position (or/c exact-nonnegative-integer? #f)])
           any/c]{

@;{The arguments are the same as the arguments to a procedure returned by
 a custom input port's @racket[_read-in]; see @secref[#:doc '(lib
 "scribblings/reference/reference.scrbl") "customport"] for
 details. The result is also the same as the result from a
 @racket[_read-in]-produced procedure.}
  这些参数与自定义输入端口的@racket[_read-in]返回的过程的参数相同；有关详细信息，请参阅@secref[#:doc '(lib
 "scribblings/reference/reference.scrbl") "customport"]。结果也与@racket[_read-in]生成的过程的结果相同。

}}

